name: API-POI CI/CD BUILD
env:
  poi_path: apis/poi/**
  registry: openhackk5a3rha7acr.azurecr.io
  repository: devopsoh/api-poi
  docker_path: apis/poi/web
  staging_url: 'https://openhackk5a3rha7poi-staging.azurewebsites.net'
  prod_url: 'https://openhackk5a3rha7poi.azurewebsites.net'
  resource_group: openhackk5a3rha7rg
  webapp_name: openhackk5a3rha7poi
  build_name: POI
'on':
  push:
    branches:
      - master
    paths:
      - apis/poi/**
      - .github/workflows/poiworkflow.yml
  pull_request:
    branches:
      - master
    paths:
      - apis/poi/**
      - .github/workflows/poiworkflow.yml
jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.202
      - name: Add Code Coverage Tools
        working-directory: apis/poi/tests/UnitTests
        run: dotnet add package coverlet.msbuild
      - name: Install dependencies
        run: dotnet restore apis/poi/web/*.csproj
      - name: .NET Build Web
        run: >-
          dotnet build --configuration Release --no-restore
          apis/poi/web/*.csproj
      - name: .NET Build Unit Tests
        run: >-
          dotnet build --configuration Release
          apis/poi/tests/UnitTests/UnitTests.csproj
      - uses: actions/github-script@0.9.0
        if: failure()
        with:
          github-token: '${{secrets.GITHUB_TOKEN}}'
          script: >
            let body = "${{ env.build_name }} Worflow Failure \n Build Number:
            ${{ github.run_number }} \n Build Log: https://github.com/${{
            github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{
            github.sha }}](https://github.com/${{ github.repository
            }}/commit/${{ github.sha }}) \n";

            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
              body: body
            });
      
  docker_build_and_push:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: ACR build
        id: acr
        uses: ams0/acr-task-github-action@v1
        with:
          service_principal: '${{ secrets.service_principal }}'
          service_principal_password: '${{ secrets.service_principal_password }}'
          tenant: '${{ secrets.tenant }}'
          registry: '${{ secrets.registry }}'
          repository: '${{ secrets.repository }}'
          folder: apis/poi/web
          image: api-poi
          tag: '${{ github.run_number }}'
      - name: Login via Az module
        uses: azure/login@v1.1
        with:
          creds: '${{secrets.AZURE_CREDENTIALS}}'
      - name: Deploy to Azure Web App for Container
        uses: azure/webapps-deploy@v2
        with:
          app-name: $webapp_name
          slot-name: staging
          images: >-
            $registry/$repository:${{github.run_number }}
