trigger:
  branches:
    include:
    - master
  paths:
    include:
    - apis/user-java/*
    exclude:
    - apis/trips/*
    - apis/userprofile/*
    - apis/poi/*
resources:
  repositories:
  - repository: self
variables:
- name: tag
  value: '$(Build.BuildId)'
stages:
- stage: rununittest
  displayName: Run unit tests
  jobs:  
  - job: rununittest
    displayName: Run unit tests
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: Maven@3
        displayName: Build User-Java
        inputs:
          mavenPomFile: 'apis/user-java/pom.xml'
          publishJUnitResults: false
          javaHomeOption: 'JDKVersion'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
      - task: Maven@3
        displayName: Test User-Java
        inputs:
          mavenPomFile: 'apis/user-java/pom.xml'
          goals: 'test'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          javaHomeOption: 'JDKVersion'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
  - job: createworkitem
    displayName: Create work item on failure
    dependsOn: rununittest
    condition: failed() # this job will only run if rununittest fails
    steps:
      - task: CreateWorkItem@1
        displayName: Create work item on failure
        inputs:
          workItemType: 'Issue'
          title: 'Build $(Build.BuildId) failed'
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: OpenHackACR
    - task: Docker@2
      displayName: Build image
      inputs:
        command: build
        containerRegistry: OpenHackACR
        repository: devopsoh/api-user-java
        dockerfile: '$(Build.SourcesDirectory)/apis/user-java/Dockerfile'
        tags: |
          $(tag)
  - job: BuildAndPush
    dependsOn:
    - Build
    condition: eq(variables['Build.Reason'], 'ResourceTrigger')
    steps:
    - task: Docker@2
      displayName: Build and Push image
      inputs:
        command: buildAndPush
        containerRegistry: OpenHackACR
        repository: devopsoh/api-user-java
        dockerfile: '$(Build.SourcesDirectory)/apis/user-java/Dockerfile'
        tags: |
          $(tag)
  - job: ErrorHandler
    dependsOn:
    - Build
    condition: failed()
    steps:
    - task: CreateWorkItem@1
      inputs:
        workItemType: bug
        title: 'Build failed ($Build.BuildId)'
        authToken: $(System.AccessToken)
      env:
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
      displayName: 'Create work item on failure'

