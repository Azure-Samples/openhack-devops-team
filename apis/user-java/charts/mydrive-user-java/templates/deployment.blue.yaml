{{ if .Values.blue.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.image.name }}-deploy-blue"
  labels:
    deploy: {{ .Values.image.label }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.image.label }}
  template:
    metadata:
      labels:
        app: {{ .Values.image.label }}
        slot: blue
    spec:
      containers:
      - image: "{{ .Values.repository.image }}:{{ .Values.blue.tag }}"
        imagePullPolicy: {{ .Values.repository.pullPolicy }}
        name: {{ .Values.image.name }}
        livenessProbe:
          httpGet:
            path: /api/healthcheck/user-java
            port: {{ .Values.image.containerPort }}
            httpHeaders:
            - name: Accept
              value: application/json
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/healthcheck/user-java
            port: {{ .Values.image.containerPort }}
            httpHeaders:
            - name: Accept
              value: application/json
          initialDelaySeconds: 5
          periodSeconds: 5
        ports:
          - containerPort: {{ .Values.image.containerPort }}
            name: http
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
        env:
          - name: SQL_USER
            valueFrom:
              secretKeyRef:
                name: sql
                key: sql_user
          - name: SQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: sql
                key: sql_password
          - name: SQL_SERVER
            valueFrom:
              secretKeyRef:
                name: sql
                key: sql_server
          - name: SQL_DBNAME
            valueFrom:
              secretKeyRef:
                name: sql
                key: sql_dbname
{{ end }}
