pipeline {
	agent {
		label "docker"
	}
	stages {
		stage('build') {
			steps {
				script {
					properties([[$class: 'GithubProjectProperty',
								projectUrlStr: '<GitHub repo URL>']])
				}
				script {
					registry =  "openhackiva6acr.azurecr.io"
				}
				withCredentials([usernamePassword(credentialsId: '6f81a13c-2f1b-4547-b66b-5968150d8add', passwordVariable: 'PASSWORD_REGISTRY', usernameVariable: 'USERNAME_REGISTRY')]) {
					sh "docker login ${registry} --username ${USERNAME_REGISTRY} --password ${PASSWORD_REGISTRY}"
				}
				script { 
					image = "${registry}/user-java:${env.BRANCH_NAME}-${BUILD_NUMBER}"
				}
				script{
					try {
						sh "mvn clean verify"
					}
					catch(any) {
						step([$class: 'GitHubIssueNotifier',
							issueAppend: true,
							issueLabel: '',
							issueTitle: '$JOB_NAME $BUILD_DISPLAY_NAME failed'])
					}				
				}					
				sh "docker build -t ${image} apis/user-java"
				sh "docker push ${image}"
			}	
		}
	}
}
