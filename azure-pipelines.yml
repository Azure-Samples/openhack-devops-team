# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

name: Poi Services Build

parameters:
- name: succeed
  displayName: Succeed or fail
  type: boolean
  default: false

trigger:
  branches: 
    include:
    - master 
  paths:
    include:
    - apis/trips/*
    exclude:
    - apis/poi/*
    - apis/user-java/*
    - apis/userprofile/*

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/apis/poi/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
- job: Build
  steps:
  - task: NuGetToolInstaller@1
  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'
  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
  - task: VSTest@2
    inputs:
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

# This job creates a work item, and only runs if the previous job failed
- job: ErrorHandler
  dependsOn: Build
  steps: 
  - task: CreateWorkItem@1
    inputs:
      workItemType: bug
      title: 'Build failed ($Build.BuildId)'
      linkWorkItems: true
      authToken: $(System.AccessToken)
      linkPR: true
    condition: failed()
    env:
      AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
    displayName: 'Create work item on failure'
